# programma KentekenCheck
# Versie: 1.2
# Auteur: B. van der Feen
# Edit: M. van Hoek
# Datum: 14/7/2022

from datetime import datetime

# OPDRACHT: Maak variabele appPath voor paddefinitie
appPath = "C:\\Users\\administrator\\KentekenCheck\\"

print("= = =  programma kentekensignalering gestart = = =")

# OPDRACHT: Druk de huidige datum en tijd af
print(datetime.now())

rdwInput = open(appPath + "RDW.csv")
scanInput = open(appPath + "GescandeData.csv")
aantalVerwerkt = 0
aantalFout = 0

# OPDRACHT: Vraag of vals.txt moet worden geleegd en sla op in legenVals
legenVals = input("Bestand vals.txt leegmaken? (j/n): ").lower()

# Bestand openen op basis van keuze
if legenVals == "n":
    signaleringen = open(appPath + "vals.txt", "a")
else:
    signaleringen = open(appPath + "vals.txt", "w")

for auto in scanInput:  # Lezen rij voor rij vanuit GescandeData.csv
    if len(auto) < 10:  # Records korter dan 10 overslaan
        continue

    autoDelen = auto.strip().split(",")  # Strip \n en splits veld
    scanKenteken = autoDelen[0]
    scanMerk = autoDelen[1]
    scanType = autoDelen[2]
    aantalVerwerkt += 1

    match = 0  # Nog geen match
    rdwInput.seek(0)  # Begin RDW.csv vanaf boven
    for rdwAuto in rdwInput:
        rdwAutoDelen = rdwAuto.strip().split(",")
        rdwKenteken = rdwAutoDelen[0]
        rdwMerk = rdwAutoDelen[2]
        rdwType = rdwAutoDelen[3]

        # OPDRACHT: Als kentekens gelijk zijn â†’ match = 1 en break
        if scanKenteken == rdwKenteken:
            match = 1
            break

    if match == 0:  # Kenteken onbekend
        aantalFout += 1
        print("Onbekend kenteken:", scanKenteken, scanMerk, scanType, "\n")
        signaleringen.write("Onbekend," + scanKenteken + "," + scanMerk + "," + scanType + "\n")
    else:  # Kenteken gevonden maar mogelijk fout in merk/type
        if scanMerk != rdwMerk or scanType != rdwType:
            aantalFout += 1
            print("Onjuist kenteken:", scanKenteken, scanMerk, scanType)
            print("Geregistreerd op:", rdwKenteken, rdwMerk, rdwType, "\n")
            signaleringen.write("Onjuist," + scanKenteken + "," + scanMerk + "," + scanType + "\n")

# Eindtotalen
print("Eindtotalen KentekenCheck")
# OPDRACHT: print correcte en onjuiste kentekens
print("Aantal correcte kentekens:", aantalVerwerkt - aantalFout)
print("Aantal onjuiste kentekens:", aantalFout)

# OPDRACHT: sluit de drie bestanden
rdwInput.close()
scanInput.close()
signaleringen.close()

print("= = =  programma kentekensignalering afgesloten = = =")
# OPDRACHT: Druk de huidige datum en tijd af
print(datetime.now())
